[["model.html", "Chapter 8 Model 8.1 Setup 8.2 Prepare Training Data 8.3 Examine Data 8.4 Model 8.5 Predict", " Chapter 8 Model 8.1 Setup 8.1.1 Libraries library(mapview) library(sf) library(terra) library(tidyverse) library(ggplot2) library(car) library(forcats) library(raster) 8.1.2 Import Snow-On Landsant # bring in snow-on landsat imagery tiles, merge into collection rast_list &lt;- list.files(path = &quot;data/landsat/landsat_2021&quot;, pattern=&#39;.tif&#39;, all.files=TRUE, full.names=TRUE) rast_all &lt;- lapply(rast_list, rast) rast_collection &lt;- sprc(rast_all) crs &lt;-crs(rast_collection[1]) 8.1.3 Import Points # bring in training points points &lt;- st_read(&quot;data/points/points_export.shp&quot;) %&gt;% st_transform(crs=crs) ## Reading layer `points_export&#39; from data source ## `G:\\Other computers\\My Laptop\\Documents\\Grad School\\Research\\ConiferRegeneration\\data\\points\\points_export.shp&#39; ## using driver `ESRI Shapefile&#39; ## Simple feature collection with 3300 features and 11 fields ## Geometry type: POINT ## Dimension: XY ## Bounding box: xmin: -118.6075 ymin: 42.57725 xmax: -106.9652 ymax: 48.83974 ## Geodetic CRS: WGS 84 8.1.4 Import Fire Polygons fires_export &lt;- st_read(&quot;data/fire_boundaries/fires_export.shp&quot;)%&gt;% st_transform( crs=crs) ## Reading layer `fires_export&#39; from data source ## `G:\\Other computers\\My Laptop\\Documents\\Grad School\\Research\\ConiferRegeneration\\data\\fire_boundaries\\fires_export.shp&#39; ## using driver `ESRI Shapefile&#39; ## Simple feature collection with 54 features and 20 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -118.6259 ymin: 42.57259 xmax: -106.9485 ymax: 48.9346 ## Geodetic CRS: WGS 84 8.2 Prepare Training Data 8.2.1 Extract Landsat Values # extract landsat values to each training point extracted_df &lt;- list() for(i in 1:length(rast_all)){ print(i) extracted_points &lt;- st_as_sf(terra::extract(rast_collection[i], points,bind = TRUE)) extracted_df[[i]] &lt;- extracted_points } ## [1] 1 ## [1] 2 ## [1] 3 ## [1] 4 ## [1] 5 ## [1] 6 ## [1] 7 ## [1] 8 ## [1] 9 ## [1] 10 ## [1] 11 ## [1] 12 ## [1] 13 ## [1] 14 ## [1] 15 ## [1] 16 ## [1] 17 ## [1] 18 ## [1] 19 ## [1] 20 ## [1] 21 ## [1] 22 ## [1] 23 ## [1] 24 ## [1] 25 ## [1] 26 ## [1] 27 ## [1] 28 ## [1] 29 ## [1] 30 ## [1] 31 ## [1] 32 training_dataset &lt;- do.call(rbind,extracted_df) %&gt;% mutate(absence = as.factor(case_when(class == &quot;absence&quot; ~ &quot;absence&quot;, TRUE ~ &quot;presence&quot;)), class = fct_relevel(as.factor(class),c(&quot;absence&quot;,&quot;presencetrace&quot;,&quot;presence1to10&quot;))) %&gt;% rename(f_type = ptch_fr, area_ha = ptch_r_) %&gt;% st_drop_geometry() %&gt;% dplyr::select(-pixel_qa,-qd_vnt_,-qd_fr_d) %&gt;% drop_na(ndvi) 8.2.2 Training Data by Forest Type pres_abs_type &lt;- training_dataset %&gt;% group_by(f_type,absence) %&gt;% summarize(n=n()) %&gt;% mutate(percent= 100*n/sum(n)) %&gt;% filter(absence==&quot;presence&quot;) ## `summarise()` has grouped output by &#39;f_type&#39;. You can override using the ## `.groups` argument. pres_abs_type ## # A tibble: 7 × 4 ## # Groups: f_type [7] ## f_type absence n percent ## &lt;chr&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Douglas-Fir presence 418 74.0 ## 2 Fir-Spruce presence 513 68.2 ## 3 Lodegepole Pine presence 1024 85.3 ## 4 Other presence 16 66.7 ## 5 Ponderosa presence 13 100 ## 6 Unforested presence 396 70.2 ## 7 &lt;NA&gt; presence 1 50 8.2.3 Training Data by Sampling Quadrant pres_abs_quad &lt;- training_dataset %&gt;% group_by(quad,absence) %&gt;% summarize(n=n()) %&gt;% mutate(percent= 100*n/sum(n)) %&gt;% filter(absence==&quot;presence&quot;) ## `summarise()` has grouped output by &#39;quad&#39;. You can override using the ## `.groups` argument. pres_abs_quad ## # A tibble: 5 × 4 ## # Groups: quad [5] ## quad absence n percent ## &lt;chr&gt; &lt;fct&gt; &lt;int&gt; &lt;dbl&gt; ## 1 neg_ext presence 560 71.6 ## 2 neg_int presence 595 76.4 ## 3 pos_ext presence 624 79.4 ## 4 pos_int presence 601 78.0 ## 5 &lt;NA&gt; presence 1 50 8.3 Examine Data 8.3.1 Plot NDVI by Density Class ggplot(training_dataset,aes(class,ndvi)) + geom_boxplot() ggplot(training_dataset %&gt;% filter(class %in% c(&quot;absence&quot;,&quot;presencetrace&quot;)),aes(class,ndvi)) + geom_boxplot()+ ylim(-.1,.1) ## Warning: Removed 42 rows containing non-finite values (stat_boxplot). ggplot(training_dataset,aes(absence,ndvi)) + geom_boxplot() 8.3.2 Examine Variable Correlation pairs(training_dataset %&gt;% dplyr::select(&quot;class&quot;,&quot;ndvi&quot;,&quot;savi&quot;,&quot;ndsi&quot;,&quot;ndfsi&quot;,&quot;nbr2&quot;)) pairs(training_dataset %&gt;% dplyr::select(&quot;ndvi&quot;,&quot;ndfsi&quot;), pch = c(16), col = c(&quot;red&quot;,&quot;dark green&quot;)[training_dataset$absence]) cor(training_dataset %&gt;% drop_na() %&gt;% dplyr::select(ndvi, evi, savi, ndsi,ndfsi, ndwi, nbr, nbr2)) ## ndvi evi savi ndsi ndfsi ndwi ## ndvi 1.00000000 0.102783173 0.99915284 -0.71016680 -0.026190808 -0.97232945 ## evi 0.10278317 1.000000000 0.10224763 -0.08259929 0.008040045 -0.11552854 ## savi 0.99915284 0.102247629 1.00000000 -0.71019743 -0.025030057 -0.97279584 ## ndsi -0.71016680 -0.082599287 -0.71019743 1.00000000 0.647032872 0.73420554 ## ndfsi -0.02619081 0.008040045 -0.02503006 0.64703287 1.000000000 0.03705757 ## ndwi -0.97232945 -0.115528539 -0.97279584 0.73420554 0.037057569 1.00000000 ## nbr 0.18967592 0.072259750 0.18890690 0.25978846 0.728978688 -0.20780216 ## nbr2 0.20854704 0.080392171 0.20610632 -0.46866327 -0.310137173 -0.25552856 ## nbr nbr2 ## ndvi 0.18967592 0.20854704 ## evi 0.07225975 0.08039217 ## savi 0.18890690 0.20610632 ## ndsi 0.25978846 -0.46866327 ## ndfsi 0.72897869 -0.31013717 ## ndwi -0.20780216 -0.25552856 ## nbr 1.00000000 0.30757811 ## nbr2 0.30757811 1.00000000 8.4 Model training_dataset1 &lt;- training_dataset %&gt;% mutate(binom=case_when(absence==&quot;absence&quot;~0, TRUE ~1), binom=as.factor(binom)) %&gt;% drop_na() # full model lm_conifer &lt;- glm(absence ~ ndvi + savi + evi + ndsi+ndfsi+ nbr + nbr2 + ndwi, data = training_dataset1, family = binomial(logit)) vif(lm_conifer) ## ndvi savi evi ndsi ndfsi nbr nbr2 ## 256.598976 258.147585 1.020675 12.164577 12.687429 7.523407 1.698811 ## ndwi ## 5.376619 # remove savi lm_conifer &lt;- glm(absence ~ ndvi + evi + ndsi+ndfsi+ nbr + nbr2 + ndwi, data = training_dataset1, family = binomial(logit)) vif(lm_conifer) ## ndvi evi ndsi ndfsi nbr nbr2 ndwi ## 4.133703 1.020591 12.149548 12.683439 7.529870 1.694613 5.337866 # remove ndfsi lm_conifer &lt;- glm(absence ~ ndvi + evi + ndsi+ nbr + nbr2 + ndwi, data = training_dataset1, family = binomial(logit)) vif(lm_conifer) ## ndvi evi ndsi nbr nbr2 ndwi ## 4.112058 1.020825 7.508204 4.594545 1.390095 5.097598 # remove ndsi lm_conifer &lt;- glm(absence ~ ndvi + evi + nbr + nbr2 + ndwi, data = training_dataset1, family = binomial(logit)) vif(lm_conifer) ## ndvi evi nbr nbr2 ndwi ## 4.014984 1.019293 1.286972 1.101599 4.204469 # final model summary(lm_conifer) ## ## Call: ## glm(formula = absence ~ ndvi + evi + nbr + nbr2 + ndwi, family = binomial(logit), ## data = training_dataset1) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.1152 0.0016 0.0496 0.4745 4.0263 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -13.93769 0.97680 -14.269 &lt; 2e-16 *** ## ndvi 18.84103 2.22341 8.474 &lt; 2e-16 *** ## evi -0.04889 0.01923 -2.542 0.011 * ## nbr 17.44675 1.21070 14.410 &lt; 2e-16 *** ## nbr2 4.15277 0.97695 4.251 2.13e-05 *** ## ndwi -3.55385 2.23710 -1.589 0.112 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 3410.9 on 3114 degrees of freedom ## Residual deviance: 1927.2 on 3109 degrees of freedom ## AIC: 1939.2 ## ## Number of Fisher Scoring iterations: 7 # # add forest type, fire # lm_conifer &lt;- glm(absence ~ ndvi + ndsi + nbr2, data = training_dataset1, family = binomial(logit)) 8.5 Predict image_subset &lt;- mask(rast_collection[1],fires_export) rast_predicted &lt;- terra::predict(image_subset,lm_conifer, type=&quot;response&quot;, se.fit=TRUE) mapview(raster(rast_predicted)) ## Warning in rasterCheckSize(x, maxpixels = maxpixels): maximum number of pixels for Raster* viewing is 5e+05 ; ## the supplied Raster* has 37748736 ## ... decreasing Raster* resolution to 5e+05 pixels ## to view full resolution set &#39;maxpixels = 37748736 &#39; ## Warning in showSRID(uprojargs, format = &quot;PROJ&quot;, multiline = &quot;NO&quot;, prefer_proj = ## prefer_proj): Discarded ellps WGS 84 in Proj4 definition: +proj=merc +a=6378137 ## +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null ## +wktext +no_defs +type=crs ## Warning in showSRID(uprojargs, format = &quot;PROJ&quot;, multiline = &quot;NO&quot;, prefer_proj = ## prefer_proj): Discarded datum World Geodetic System 1984 in Proj4 definition "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
