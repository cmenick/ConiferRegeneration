[["snow-cover-imagery.html", "Chapter 7 Snow Cover Imagery 7.1 Set Up 7.2 Functions 7.3 Create Image Composites", " Chapter 7 Snow Cover Imagery 7.1 Set Up 7.1.1 Import Fire Boundaries // Import fire polygons var fires_export = ee.FeatureCollection(&quot;projects/westernconiferregen/assets/fires_export&quot;); 7.1.2 Import Landsat Imagery // Import Landsat 4,5,7, rename bands var ls7 = ee.ImageCollection(&#39;LANDSAT/LE07/C01/T1_SR&#39;), ls5 = ee.ImageCollection(&#39;LANDSAT/LT05/C01/T1_SR&#39;), ls4 = ee.ImageCollection(&#39;LANDSAT/LT04/C01/T1_SR&#39;); var ls4_7 = ee.ImageCollection(ls7.merge(ls5).merge(ls4)).map(function(image) { var bands = [&#39;B1&#39;,&#39;B2&#39;, &#39;B3&#39;, &#39;B4&#39;, &#39;B5&#39;, &#39;B7&#39;, &#39;pixel_qa&#39;]; var new_bands = [&#39;blue&#39;, &#39;green&#39;, &#39;red&#39;, &#39;nir&#39;, &#39;swir1&#39;, &#39;swir2&#39;, &#39;pixel_qa&#39;]; return image.select(bands).rename(new_bands); }); // Import Landsat 8, rename bands var ls8 = ee.ImageCollection(&#39;LANDSAT/LC08/C01/T1_SR&#39;).map(function(image) { var bands = [&#39;B2&#39;, &#39;B3&#39;, &#39;B4&#39;, &#39;B5&#39;, &#39;B6&#39;, &#39;B7&#39;, &#39;pixel_qa&#39;]; var new_bands = [&#39;blue&#39;, &#39;green&#39;, &#39;red&#39;, &#39;nir&#39;, &#39;swir1&#39;, &#39;swir2&#39;, &#39;pixel_qa&#39;]; return image.select(bands).rename(new_bands); }); // Merge Landsat 4-7 and 8 with renamed bands var ls4_8 = ee.ImageCollection(ls8.merge(ls4_7)); 7.2 Functions 7.2.1 Get Spectral Indices // Function: get spectral indices var calc_indices = function(image) { return image .addBands(image.normalizedDifference([&#39;nir&#39;, &#39;red&#39;]).double().rename(&#39;ndvi&#39;)) .addBands(image.normalizedDifference([&#39;green&#39;, &#39;nir&#39;]).double().rename(&#39;ndwi&#39;)) .addBands(image.normalizedDifference([&#39;nir&#39;, &#39;swir2&#39;]).double().rename(&#39;nbr&#39;)) .addBands(image.normalizedDifference([&#39;swir1&#39;,&#39;swir2&#39;]).double().rename(&#39;nbr2&#39;)) .addBands(image.normalizedDifference([&#39;green&#39;, &#39;swir1&#39;]).double().rename(&#39;ndsi&#39;)) .addBands(image.normalizedDifference([&#39;nir&#39;,&#39;swir1&#39;]).double().rename(&#39;ndfsi&#39;)) .addBands(image.expression(&#39;((NIR - R) / (NIR + R + 0.5)) * (1.5)&#39; ,{&#39;NIR&#39;:image.select(&#39;nir&#39;),&#39;R&#39;:image.select(&#39;red&#39;)}).rename(&#39;savi&#39;)) .addBands(image.expression(&#39;2.5 * ((NIR - R) / (NIR + 6 * R - 7.5 * B + 1))&#39; ,{&#39;NIR&#39;:image.select(&#39;nir&#39;),&#39;R&#39;:image.select(&#39;red&#39;),&#39;B&#39;:image.select(&#39;blue&#39;)}).rename(&#39;evi&#39;))}; 7.2.2 Get Clear Images // Function: QA var qa_mask = function(lsImg){ var quality =lsImg.select([&#39;pixel_qa&#39;]); var clear = quality.bitwiseAnd(8).eq(0) // cloud shadow .and(quality.bitwiseAnd(32).eq(0) // cloud .and(quality.bitwiseAnd(4).eq(0))); // water return lsImg.updateMask(clear) .copyProperties(lsImg, [&#39;system:time_start&#39;]); }; 7.2.3 Get snow-Covered Pixels // Function: snow masking var ndfsi_mask = function(image){ var ndfsi_snow = image.select(&#39;ndfsi&#39;).gt(0.4); return image.updateMask(ndfsi_snow); }; var ndsi_mask = function(image){ var ndsi_snow = image.select(&#39;ndsi&#39;).gt(0.4); return image.updateMask(ndsi_snow); }; 7.3 Create Image Composites 7.3.1 Map Functions Across Image Collection // Map functions to create final Landsat collection var ls_indices = ls4_8.map(calc_indices) .map(ndfsi_mask) .map(ndsi_mask) .map(qa_mask); 7.3.2 Create 3-year Landsat Composites // create 3-year snow-cover image composites over fire areas for (var j = 1986; j &lt; 1990; j++){ // list years within imagery window var years = [j-1,j,j+1,j+2]; print(&quot;landsat_&quot; + years[0] + &quot;_&quot;+ years[3]); var start = ee.Date(years[0] + &#39;-11-01&#39;); var end = ee.Date(years[3] + &#39;-05-01&#39;); print(start); print(end); // filter images to fire bounds and dates of interest var ls_area = ls_indices .filterBounds(fires_export) .filterDate(start,end) .filter(ee.Filter.calendarRange(12,4,&quot;month&quot;)) .median() .clip(fires_export); // project image to match training grid var proj4326 = ee.Projection(&#39;EPSG:4326&#39;).atScale(30); var ls_area_4326= ls_area.reproject(proj4326).clip(fires_export); // view and map print(ls_area_4326); Map.addLayer(ls_area_4326, {min:0,max:1,bands:[&quot;ndvi&quot;],palette:[&quot;white&quot;,&quot;green&quot;]}, &quot;ndvi&quot; + years[0] + &quot;_&quot; + years[3],false); Map.addLayer(ls_area_4326, {min:0,max:3000,bands:[&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;]}, &quot;Landsat EPSG:4326&quot;,false); // export to drive Export.image.toDrive({ image: ls_area_4326, folder: &quot;landsat_prefire_&quot; + years[0] + &quot;_&quot; + years[3], description: &quot;landsat_prefire_&quot; + years[0] + &quot;_&quot; + years[3], crs: &quot;EPSG:4326&quot;, maxPixels: 1e13, scale: 30, region: fires_export }); } "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
